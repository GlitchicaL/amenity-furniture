{"version":3,"sources":["constants/userConstants.js","constants/cartConstants.js","constants/orderConstants.js","constants/productConstants.js","store.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/productReducers.js","components/Header.js","components/SidebarNav.js","actions/userActions.js","components/Footer.js","components/Rating.js","actions/cartActions.js","components/ProductCard.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductsScreen.js","screens/ProductScreen.js","components/forms/Login.js","screens/LoginScreen.js","components/forms/Register.js","screens/RegisterScreen.js","screens/AccountScreen.js","actions/orderActions.js","screens/CartScreen.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userUpdate","success","cart","cartItems","shippingAddress","item","existItem","find","x","product","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","productList","products","productDetails","reviews","initalState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","toggleNav","className","to","style","display","href","cursor","onClick","SidebarNav","useSelector","dispatch","useDispatch","email","Button","removeItem","Footer","Rating","value","color","marginLeft","addToCart","id","qty","getState","a","axios","get","data","_id","name","image","price","countInStock","setItem","stringify","ProductCard","Card","Img","src","alt","Body","Title","rating","numReviews","Text","disabled","listProducts","response","message","HomeScreen","useEffect","Container","fluid","Row","Col","md","xs","sm","lg","ProductsScreen","placeholder","defaultValue","ProductScreen","match","params","border","description","Login","location","history","useState","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","config","headers","post","detail","login","Group","Label","Control","onChange","target","LoginScreen","Alert","variant","Register","confirmPassword","setConfirmPassword","console","log","register","RegisterScreen","AccountScreen","setMessage","ordersLoading","ordersError","Authorization","token","put","updateUser","Spinner","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","class","CartScreen","removeFromCartHandler","removeFromCart","ListGroup","index","Item","background","Image","width","size","maxWidth","as","Number","Array","keys","reduce","acc","toFixed","length","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","controlId","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","rounded","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","user","isDelivered","deliveredAt","Date","paidAt","toLocaleString","amount","onSuccess","paymentResult","payOrder","App","isClose","setIsClose","SidebarRef","useRef","current","classList","remove","add","ref","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cc8ad7fe.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const CART_ADD_ITEM = \"CARD_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CARD_REMOVE_ITEM\"\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n/* Import Reducers */\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\r\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initalState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initalState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","/* Import Constants */\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Link } from 'react-router-dom';\r\n\r\n/* Import CSS */\r\nimport \"../css/components/Header.css\";\r\n\r\nconst Header = ({ toggleNav }) => {\r\n\r\n    return (\r\n        <header className=\"flex\">\r\n            <Link className='text-decoration-none' to='/'><h4 className='m-0'>Amenity Furniture</h4></Link>\r\n\r\n            <div className=\"flex\">\r\n                <div className=\"flex\" style={{ display: \"none\" }}>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-chair\"></i>Products</a>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-shopping-cart\"></i>Cart</a>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-user\"></i>Login</a>\r\n                </div>\r\n\r\n                <i className=\"fas fa-bars\" style={{ cursor: 'pointer' }} onClick={toggleNav}></i>\r\n            </div>\r\n\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n/* Import CSS */\r\nimport \"../css/components/SidebarNav.css\";\r\n\r\n// Import Logout Action\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst SidebarNav = () => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex\">\r\n\r\n            {userInfo ? (\r\n                <div className=\"flex-c\">\r\n                    <p>{userInfo.email}</p>\r\n                    <Button onClick={logoutHandler}>Logout</Button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"flex-c\">\r\n                    <p>Welcome, Guest</p>\r\n                    <Link to='/login' className=\"btn\">Login</Link>\r\n                </div>\r\n            )}\r\n\r\n            <div className='my-4'>\r\n                <Link to='/cart' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-shopping-cart\"></i>My Cart</Link>\r\n                <Link to='/account' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-user\"></i>Account</Link>\r\n\r\n                <Link to='/products' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-chair\"></i>Products</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SidebarNav;","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL\r\n} from '../constants/userConstants';\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    //dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n\r\n}\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUser = (email, password) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            '/api/users/update/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}","/* Import CSS */\r\nimport \"../css/components/Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h1>Amenity Furniture</h1>\r\n            <p><small>Copyright &copy; 2021</small></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// <i class=\"fas fa-star\"></i>\r\n// <i class=\"fas fa-star-half\"></i>\r\n\r\nconst Rating = ({ value, reviews }) => {\r\n    const color = \"#E6E665\";\r\n\r\n    return (\r\n        <div className=\"flex rating\">\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <p style={{ marginLeft: '0.25em' }}>{reviews && reviews}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rating;","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import { Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport \"../css/components/ProductCard.css\";\r\nimport Rating from './Rating';\r\n\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst ProductCard = ({ product }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, 1))\r\n    }\r\n\r\n    return (\r\n        <Card className=\"mx-auto product-card\">\r\n            <Card.Img src={product.image} className=\"p-3 product-img\" alt={product.name} />\r\n\r\n            <Card.Body>\r\n                <Card.Title>\r\n                    <Link className='product-link' to={`/products/${product._id}`}>{product.name}</Link>\r\n                </Card.Title>\r\n\r\n                <Rating value={product.rating} reviews={product.numReviews} />\r\n\r\n                <Card.Text>${product.price}</Card.Text>\r\n\r\n                <Button onClick={addToCartHandler} disabled={product.countInStock === 0}>Add to Cart</Button>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","import axios from 'axios';\r\n\r\n/* Import constants */\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport ProductCard from '../components/ProductCard';\r\n\r\n/* Import Actions */\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container fluid>\r\n\r\n            {/* Welcome Section */}\r\n\r\n            <Row className='mx-auto p-4'>\r\n                <Col md={12} className='text-center'>\r\n                    <h1>Amenity Furniture</h1>\r\n                    <p>For all your home furnishing needs.</p>\r\n                    <Link to='/products' className=\"btn\">View Products</Link>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Featured Products Section */}\r\n\r\n            <Row className='mx-auto py-4'>\r\n                <Col>\r\n                    <h1 className='mx-auto text-center'>Featured Products</h1>\r\n\r\n                    <Row className=\"mx-auto py-3 product-list\">\r\n                        {\r\n                            loading ? <p>Fetching some amazing furniture...</p>\r\n                                : error ? <p>{error}</p>\r\n                                    : products.map(product => (\r\n                                        <Col key={product._id} className='mx-auto my-2' xs={12} sm={6} md={4} lg={3}>\r\n                                            <ProductCard product={product} />\r\n                                        </Col>\r\n                                    ))\r\n                        }\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default HomeScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport ProductCard from '../components/ProductCard';\r\n\r\n/* Import Actions */\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst ProductsScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {/* Product Filter Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 flex'>\r\n                    <input type=\"text\" className='mx-2 p-2' placeholder=\"Search Products\" />\r\n\r\n                    <select name=\"categories\" id=\"\" defaultValue=\"all\" style={{ display: \"none\" }}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"tables\">Tables</option>\r\n                        <option value=\"chairs\">Chairs</option>\r\n                        <option value=\"lights\">Lights</option>\r\n                    </select>\r\n\r\n                    <Button><i className=\"fas fa-filter\"></i></Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Display Products */}\r\n\r\n            {\r\n                // TODO: Improve loading message. Maybe add a little animation while loading?\r\n                // TODO: Improve error message. Maybe make both the loading / error message a component?\r\n\r\n                loading ? <p>Fetching amazing products...</p> // If loading, show loading message\r\n\r\n                    : error ? <p>{error}</p> // If error, show error message\r\n\r\n                        // If not loading, or no error, show products\r\n                        : <Row className=\"product-list\">\r\n                            {\r\n                                products.map(product => (\r\n                                    <Col className='my-2' key={product._id}>\r\n                                        <ProductCard product={product} />\r\n                                    </Col>\r\n                                ))\r\n                            }\r\n                        </Row>\r\n            }\r\n\r\n            {/* Pagination Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 flex'>\r\n                    <Button className='mx-3'><i className=\"fas fa-chevron-left\"></i></Button>\r\n\r\n                    <Link to={'/'} className=\"mx-2 active\">1</Link>\r\n                    <Link to={'/'} className=\"mx-2\">2</Link>\r\n                    <Link to={'/'} className=\"mx-2\">3</Link>\r\n\r\n                    <Button className='mx-3'><i className=\"fas fa-chevron-right\"></i></Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductsScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport Rating from '../components/Rating';\r\n\r\n/* Import Actions */\r\nimport { listProductDetails } from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { error, loading, product } = productDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, 1))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n\r\n                {/* Main Product Details */}\r\n\r\n                <Col>\r\n                    <Row>\r\n                        <Col className='my-auto py-4'>\r\n                            <img src={product.image} className=\"product-img flex\" style={{ border: \"0.75em solid #402E32\" }} alt={product.name} />\r\n                        </Col>\r\n\r\n                        <Col className='m-4'>\r\n\r\n                            <h3 className='text-center'>{product.name}</h3>\r\n\r\n                            <Rating value={product.rating} reviews={product.numReviews} />\r\n\r\n                            <p className='text-center'>{product.description}</p>\r\n\r\n                            <h4 className='text-center'>Specifications</h4>\r\n                            <div className='my-4'>\r\n                                <p>Color: Brown</p>\r\n                                <p>Material: Pine</p>\r\n                                <p>Dimensions: N/A</p>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col className='m-4' style={{ 'background': 'var(--clr-brown)' }}>\r\n                            <Row className=\"m-4 text-center\">\r\n                                <Col>\r\n                                    <h4>${product.price}</h4>\r\n                                    <Button onClick={addToCartHandler} disabled={product.countInStock === 0}>Add to Cart</Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>Free Delivery</h5>\r\n                                    <p className=\"bold\">Wednesday, June 2nd</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>In Stock</h5>\r\n\r\n                                    {product.countInStock === 0 ? (\r\n                                        <p className=\"bold\">Out of Stock</p>\r\n                                    ) : <p className=\"bold\">{product.countInStock}</p>}\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>Return Policy</h5>\r\n                                    <p className=\"bold\">Returnable</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Product Review Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 text-center'>\r\n                    <h2>Reviews & Questions</h2>\r\n                    <p>Reviews are currently unavailable</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductScreen;","import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// Import Actions\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst Login = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo) { // If user is logged in, redirect\r\n            history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo, dispatch])\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Form className='p-3' onSubmit={loginHandler}>\r\n            <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button className='d-block mx-auto' type='submit'>Login</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Login;","import { Container, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Login from '../components/forms/Login';\r\nimport \"../css/screens/LoginScreen.css\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error } = userLogin\r\n\r\n    return (\r\n        <Container fluid>\r\n\r\n            <div className=\"user-access-container\">\r\n                <div className=\"transparent-background\"></div>\r\n                <div className=\"user-access-form flex-c\">\r\n                    <h2 className=\"flex\">Log In</h2>\r\n\r\n                    <Login location={location} history={history} />\r\n\r\n                    <p className='my-2'>Don't have an account? <Link to=\"/register\"><strong>Register</strong></Link></p>\r\n\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                </div>\r\n            </div>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { register } from '../../actions/userActions';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo) { // If user is logged in, redirect\r\n            history.push('/account')\r\n        }\r\n    }, [history, userInfo, dispatch])\r\n\r\n    const registerHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            console.log('Passwords do not match')\r\n        } else {\r\n            dispatch(register(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className='p-3' onSubmit={registerHandler}>\r\n            <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Create Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Create Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Retype Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button className='d-block mx-auto' type='submit'>Register</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Register;","import { Container, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n\r\n/* Import Components */\r\nimport Register from '../components/forms/Register';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error } = userRegister\r\n\r\n    return (\r\n        <Container fluid>\r\n\r\n            <div className=\"user-access-container\">\r\n                <div className=\"transparent-background\"></div>\r\n                <div className=\"user-access-form flex-c\">\r\n                    <h2 className=\"flex\">Create an Account</h2>\r\n\r\n                    <Register history={history} />\r\n\r\n                    <p className='my-2'>Already have an account? <Link className=\"margin-left\" to=\"/login\"><strong>Sign In</strong></Link></p>\r\n\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                </div>\r\n            </div>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;","import { useEffect, useState } from 'react'\r\nimport { Container, Row, Col, Form, Button, Alert, Table, Spinner } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUserOrders } from '../actions/orderActions';\r\nimport { updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst AccountScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success } = userUpdate\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: ordersLoading, error: ordersError, orders } = orderListMy\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Ensure that the user is logged in before viewing this page\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n\r\n            setEmail(userInfo.email)\r\n\r\n            dispatch(getUserOrders())\r\n\r\n            if (success) { // Executes when the user updates their account info\r\n                dispatch({ type: USER_UPDATE_RESET })\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setMessage('Account Updated')\r\n            }\r\n\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [history, userInfo, success, dispatch])\r\n\r\n    const updateUserHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUser(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>My Account</h1>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <h2>Account Details</h2>\r\n\r\n                    {message && <Alert variant='primary'>{message}</Alert>}\r\n\r\n                    <Form className='p-2' onSubmit={updateUserHandler}>\r\n\r\n                        {/* EMAIL */}\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"text\"\r\n                            placeholder='Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        {/* PASSWORD & CONFIRM PASSWORD */}\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"password\"\r\n                            placeholder='Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"password\"\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Button type='submit'>Update</Button>\r\n                    </Form>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <h2>My Orders</h2>\r\n\r\n                    {ordersLoading ? (\r\n                        <Spinner />\r\n                    ) : ordersError ? (\r\n                        <Alert variant='danger'>{ordersError}</Alert>\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delievered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            <i class=\"fas fa-check\" style={{ color: '#4C8076' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td><i className='fas fa-times' style={{ color: 'red' }}></i></td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>View</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AccountScreen;","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL\r\n} from '../constants/orderConstants';\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}","import { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, ListGroup, Form, Button, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\n// FIXME: If an item is already in a user's cart, but the price has an update on the backend, it does not update in the user's cart...\r\n// FIXME: With the issue mentioned above, we may have a similar issue with the stock count if it's updated on the backend as well.\r\n\r\nconst CartScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>My Cart</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <h2 className='p-2'>Items In Cart</h2>\r\n\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((product, index) => (\r\n                            <ListGroup.Item key={index} style={{ background: '#402E32' }} className='p-4'>\r\n                                <Row>\r\n                                    <Col md={2} className='flex p-0'>\r\n                                        <Image src={product.image} alt={product.name} style={{ width: '50px' }} fluid />\r\n                                    </Col>\r\n\r\n                                    <Col md={4} className='flex p-0'>\r\n                                        <Link className='product-link' to={`/products/${product.product}`}>{product.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2} className='flex p-0'>\r\n                                        ${product.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3} className='flex'>\r\n                                        <Form.Control\r\n                                            size=\"sm\"\r\n                                            style={{ maxWidth: '100px' }}\r\n                                            as=\"select\"\r\n                                            value={product.qty}\r\n                                            onChange={(e) => dispatch(addToCart(product.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1} className='flex'>\r\n                                        <Button onClick={() => { removeFromCartHandler(product.product) }}><i class=\"fas fa-minus\"></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <h2 className='py-2'>Cart Details</h2>\r\n\r\n                    <Card style={{ background: '#402E32' }} className='my-2'>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item style={{ background: '#402E32' }}>\r\n                                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        <ListGroup className='p-3' style={{ background: '#402E32' }}>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block mx-auto'\r\n                                style={{ maxWidth: '250px' }}\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CartScreen;","import { useState } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const shippingHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Shipping Details</h1>\r\n\r\n            <Form className='m-4' onSubmit={shippingHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;","import { useState } from 'react';\r\nimport { Container, Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const paymentHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Payment Details</h1>\r\n\r\n            <Form className='m-4' onSubmit={paymentHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Image, Card, ListGroup, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number(cart.itemsPrice * (0.082)).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history, dispatch, order])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Review Order</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode}\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Alert variant='info'>\r\n                                Your cart is empty\r\n                            </Alert> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X {item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card style={{ background: '#402E32' }}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total Price:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Alert variant='danger'>{error}</Alert>\r\n                                </ListGroup.Item>\r\n                            }\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, ListGroup, Image, Card, Alert, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    // Ac734GI9sLLGYLFwxW1akkR_CT7ImW573aza3DJiOdh6CEhdCCNU6IoobSiYcLsZb7oT2ruiX1iG2j6d\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=Ac734GI9sLLGYLFwxW1akkR_CT7ImW573aza3DJiOdh6CEhdCCNU6IoobSiYcLsZb7oT2ruiX1iG2j6d'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!order || successPay || order._id !== Number(orderId)) {\r\n\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        } else if (!order.isPaid) {\r\n\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, order, orderId, successPay])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <div>\r\n                    <h1 className='my-4'>Order: {order._id}</h1>\r\n\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                        {'   '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                        {'   '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Alert variant='success'>Delievered on {order.deliveredAt}</Alert>\r\n                                    ) : (\r\n                                        <Alert variant='warning'>Not delievered</Alert>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment</h2>\r\n\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n\r\n                                    {order.isPaid ? (\r\n                                        <Alert variant='success'>Paid on {new Date(order.paidAt).toLocaleString()}</Alert>\r\n                                    ) : (\r\n                                        <Alert variant='warning'>Not paid</Alert>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Alert variant='info'>\r\n                                        Order is empty\r\n                                    </Alert> : (\r\n                                        <ListGroup variant='flush'>\r\n                                            {order.orderItems.map((item, index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                        </Col>\r\n\r\n                                                        <Col>\r\n                                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                        </Col>\r\n\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X {item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card style={{ background: '#402E32' }}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Item:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total Price:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Spinner />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Spinner />\r\n                                            ) : (\r\n                                                <PayPalButton\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;","import { useState, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\n/* Import Components */\nimport Header from \"./components/Header\";\nimport SidebarNav from \"./components/SidebarNav\";\nimport Footer from \"./components/Footer\";\n\n/* Import Screens */\nimport HomeScreen from \"./screens/HomeScreen\";\n\nimport ProductsScreen from './screens/ProductsScreen';\nimport ProductScreen from './screens/ProductScreen';\n\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport AccountScreen from './screens/AccountScreen';\n\nimport CartScreen from './screens/CartScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\n\nfunction App() {\n  const [isClose, setIsClose] = useState(true);\n  const SidebarRef = useRef();\n\n  const toggleNav = () => {\n    if (!isClose) {\n      SidebarRef.current.classList.add('close');\n      setIsClose(true);\n    }\n    else {\n      SidebarRef.current.classList.remove('close');\n      setIsClose(false);\n    }\n  }\n\n  return (\n    <Router>\n      <Header toggleNav={toggleNav} />\n\n      <Container fluid>\n        <div className=\"nav-container close\" ref={SidebarRef}>\n          <SidebarNav />\n        </div>\n\n        <Route path='/' component={HomeScreen} exact />\n        <Route path='/products' component={ProductsScreen} exact />\n        <Route path='/products/:id' component={ProductScreen} />\n\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/account' component={AccountScreen} />\n\n        <Route path='/cart' component={CartScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/order/:id' component={OrderScreen} />\n\n      </Container>\n\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* CSS Imports */\nimport './css/bootstrap.min.css';\nimport './css/site.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}