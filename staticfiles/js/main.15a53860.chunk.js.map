{"version":3,"sources":["constants/userConstants.js","constants/cartConstants.js","constants/orderConstants.js","constants/productConstants.js","store.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/productReducers.js","components/Header.js","components/SidebarNav.js","actions/userActions.js","components/Footer.js","components/Rating.js","actions/cartActions.js","components/ProductCard.js","components/Loader.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductsScreen.js","screens/ProductScreen.js","components/forms/Login.js","screens/LoginScreen.js","components/forms/Register.js","screens/RegisterScreen.js","screens/AccountScreen.js","actions/orderActions.js","screens/CartScreen.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_ADMIN_UPDATE_REQUEST","USER_ADMIN_UPDATE_SUCCESS","USER_ADMIN_UPDATE_FAIL","USER_ADMIN_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userUpdate","success","userList","users","userDetails","user","userDelete","userAdminUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","product","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","productList","products","productDetails","reviews","productDelete","productCreate","productUpdate","initalState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","toggleNav","icon","className","to","style","display","href","cursor","onClick","SidebarNav","useSelector","dispatch","useDispatch","email","Button","removeItem","isAdmin","Footer","Rating","value","color","margin","addToCart","id","qty","getState","a","axios","get","data","_id","name","image","price","countInStock","setItem","stringify","ProductCard","Card","width","maxHeight","minHeight","Img","src","alt","Body","Title","rating","numReviews","Text","description","Loader","message","Spinner","animation","listProducts","response","listProductDetails","HomeScreen","useEffect","Container","fluid","Row","Col","xs","sm","md","lg","ProductsScreen","placeholder","defaultValue","ProductScreen","match","params","border","disabled","Login","location","history","useState","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","config","headers","post","detail","login","Group","Label","Control","onChange","target","LoginScreen","Alert","variant","Register","confirmPassword","setConfirmPassword","console","log","register","RegisterScreen","AccountScreen","setMessage","ordersLoading","ordersError","Authorization","token","put","updateUser","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","class","CartScreen","removeFromCartHandler","removeFromCart","ListGroup","index","Item","background","Image","size","maxWidth","as","Number","Array","keys","reduce","acc","toFixed","length","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","controlId","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","rounded","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","Date","paidAt","toLocaleString","amount","onSuccess","paymentResult","payOrder","UserListScreen","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setName","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","adminUpdateUser","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","productId","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","show","setShow","setIcon","SidebarRef","useRef","current","classList","add","remove","ref","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.15a53860.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_ADMIN_UPDATE_REQUEST = 'USER_ADMIN_UPDATE_REQUEST'\r\nexport const USER_ADMIN_UPDATE_SUCCESS = 'USER_ADMIN_UPDATE_SUCCESS'\r\nexport const USER_ADMIN_UPDATE_FAIL = 'USER_ADMIN_UPDATE_FAIL'\r\nexport const USER_ADMIN_UPDATE_RESET = 'USER_ADMIN_UPDATE_RESET'","export const CART_ADD_ITEM = \"CARD_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CARD_REMOVE_ITEM\"\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n/* Import Reducers */\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer, userListReducer, userDetailsReducer, userDeleteReducer, userAdminUpdateReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    userList: userListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userDelete: userDeleteReducer,\r\n    userAdminUpdate: userAdminUpdateReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initalState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initalState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_ADMIN_UPDATE_REQUEST,\r\n    USER_ADMIN_UPDATE_SUCCESS,\r\n    USER_ADMIN_UPDATE_FAIL,\r\n    USER_ADMIN_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userAdminUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_ADMIN_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_ADMIN_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_ADMIN_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_ADMIN_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","/* Import Constants */\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* Import CSS */\r\nimport \"../css/components/Header.css\";\r\n\r\nconst Header = ({ toggleNav, icon }) => {\r\n    return (\r\n        <header className=\"flex\">\r\n            <Link className='text-decoration-none' to='/'><h4 className='m-0'>Amenity Furniture</h4></Link>\r\n\r\n            <div className=\"flex\">\r\n                <div className=\"flex\" style={{ display: \"none\" }}>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-chair\"></i>Products</a>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-shopping-cart\"></i>Cart</a>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-user\"></i>Login</a>\r\n                </div>\r\n\r\n                <i className={`fas fa-${icon}`} style={{ cursor: 'pointer' }} onClick={toggleNav}></i>\r\n            </div>\r\n\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n/* Import CSS */\r\nimport \"../css/components/SidebarNav.css\";\r\n\r\n// Import Logout Action\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst SidebarNav = () => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex\">\r\n\r\n            {userInfo ? (\r\n                <div className=\"flex-c\">\r\n                    <p>{userInfo.email}</p>\r\n                    <Button onClick={logoutHandler}>Logout</Button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"flex-c\">\r\n                    <p>Welcome, Guest</p>\r\n                    <Link to='/login' className=\"btn\">Login</Link>\r\n                </div>\r\n            )}\r\n\r\n            <div className='my-4'>\r\n                <Link to='/cart' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-shopping-cart\"></i>My Cart</Link>\r\n                <Link to='/account' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-user\"></i>Account</Link>\r\n\r\n                <Link to='/products' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-chair\"></i>Products</Link>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            {userInfo && userInfo.isAdmin ? (\r\n                <div>\r\n                    <p className='flex'>Admin Panel</p>\r\n                    <Link to='/admin/userlist' className=\"my-3 btn d-block\">View Users</Link>\r\n                    <Link to='/admin/productlist' className=\"my-3 btn d-block\">Edit Products</Link>\r\n                    <Link to='/admin/orderlist' className=\"my-3 btn d-block\">View Orders</Link>\r\n                </div>\r\n            ) : (\r\n                <span></span>\r\n            )}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SidebarNav;","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_ADMIN_UPDATE_REQUEST,\r\n    USER_ADMIN_UPDATE_SUCCESS,\r\n    USER_ADMIN_UPDATE_FAIL,\r\n    USER_ADMIN_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n\r\n}\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUser = (email, password) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            '/api/users/update/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const adminUpdateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_ADMIN_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_ADMIN_UPDATE_SUCCESS })\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ADMIN_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}","/* Import CSS */\r\nimport \"../css/components/Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h1>Amenity Furniture</h1>\r\n            <p><small>Copyright &copy; 2021</small></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// <i class=\"fas fa-star\"></i>\r\n// <i class=\"fas fa-star-half\"></i>\r\n\r\nconst Rating = ({ value, reviews }) => {\r\n    const color = \"#E6E665\";\r\n\r\n    return (\r\n        <div className=\"flex rating my-3\">\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <p style={{ margin: '0 0.25em' }}>{reviews && reviews}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rating;","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import { Card, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport \"../css/components/ProductCard.css\";\r\nimport Rating from './Rating';\r\n\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst ProductCard = ({ product }) => {\r\n\r\n    return (\r\n        <LinkContainer to={`/products/${product._id}`}>\r\n            <Card className=\"mx-auto product-card\">\r\n                <div style={{ width: '100%', maxHeight: '250px', minHeight: '200px', margin: '0 auto' }}>\r\n                    <Card.Img src={product.image} className=\"p-3 product-img\" alt={product.name} />\r\n                </div>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>{product.name}</Card.Title>\r\n\r\n                    <Rating value={product.rating} reviews={product.numReviews} />\r\n\r\n                    <Card.Text>{product.description}</Card.Text>\r\n\r\n                </Card.Body>\r\n\r\n                <Card.Footer>${product.price}</Card.Footer>\r\n            </Card>\r\n        </LinkContainer>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","import { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = ({ message }) => {\r\n    return (\r\n        <div className='flex-c mx-auto'>\r\n            <Spinner animation=\"grow\" className='my-3 white' />\r\n            <p className='flex'>{message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\n/* Import constants */\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create/`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/update/${product._id}/`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport '../css/screens/HomeScreen.css';\r\n\r\n/* Import Components */\r\nimport ProductCard from '../components/ProductCard';\r\nimport Loader from '../components/Loader';\r\n\r\n/* Import Actions */\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container fluid>\r\n\r\n            {/* Welcome Section */}\r\n\r\n            <div className='mx-auto welcome-section'>\r\n\r\n                <div className='welcome-section-image'></div>\r\n\r\n                <div className='welcome-section-text'>\r\n                    <h1>Amenity Furniture</h1>\r\n                    <p>For all your home furnishing needs.</p>\r\n                    <Link to='/products' className=\"btn\">View Products</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Featured Products Section */}\r\n\r\n            <Row className='mx-auto py-4'>\r\n                <Col>\r\n                    <h1 className='mx-auto text-center'>Featured Products</h1>\r\n\r\n                    <div className=\"mx-auto py-3\">\r\n                        {\r\n                            loading ? <Loader message='Fetching our current favorites...' />\r\n                                : error ? <p>{error}</p>\r\n                                    : <Row className='product-list mx-auto'>\r\n                                        {\r\n                                            products.map(product => (\r\n                                                <Col key={product._id} className='mx-auto my-2' xs={12} sm={6} md={4} lg={3}>\r\n                                                    <ProductCard product={product} />\r\n                                                </Col>\r\n                                            ))\r\n                                        }\r\n                                    </Row>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default HomeScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport ProductCard from '../components/ProductCard';\r\nimport Loader from '../components/Loader';\r\n\r\n/* Import Actions */\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst ProductsScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {/* Product Filter Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 flex'>\r\n                    <input type=\"text\" className='mx-2 p-2' placeholder=\"Search Products\" />\r\n\r\n                    <select name=\"categories\" id=\"\" defaultValue=\"all\" style={{ display: \"none\" }}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"tables\">Tables</option>\r\n                        <option value=\"chairs\">Chairs</option>\r\n                        <option value=\"lights\">Lights</option>\r\n                    </select>\r\n\r\n                    <Button><i className=\"fas fa-filter\"></i></Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Display Products */}\r\n\r\n            {\r\n                // TODO: Improve loading message. Maybe add a little animation while loading?\r\n                // TODO: Improve error message. Maybe make both the loading / error message a component?\r\n\r\n                loading ? <Loader message='Fetching amazing products...' /> // If loading, show loading message\r\n\r\n                    : error ? <p>{error}</p> // If error, show error message\r\n\r\n                        // If not loading, or no error, show products\r\n                        : <Row className=\"product-list\">\r\n                            {\r\n                                products.map(product => (\r\n                                    <Col className='my-2' key={product._id}>\r\n                                        <ProductCard product={product} />\r\n                                    </Col>\r\n                                ))\r\n                            }\r\n                        </Row>\r\n            }\r\n\r\n            {/* Pagination Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 flex'>\r\n                    <Button className='mx-3'><i className=\"fas fa-chevron-left\"></i></Button>\r\n\r\n                    <Link to={'/'} className=\"mx-2 active\">1</Link>\r\n                    <Link to={'/'} className=\"mx-2\">2</Link>\r\n                    <Link to={'/'} className=\"mx-2\">3</Link>\r\n\r\n                    <Button className='mx-3'><i className=\"fas fa-chevron-right\"></i></Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductsScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport Rating from '../components/Rating';\r\n\r\n/* Import Actions */\r\nimport { listProductDetails } from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { error, loading, product } = productDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, 1))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n\r\n                {/* Main Product Details */}\r\n\r\n                <Col>\r\n                    <Row>\r\n                        <Col className='my-auto py-4'>\r\n                            <img src={product.image} className=\"product-img flex\" style={{ border: \"0.75em solid #402E32\" }} alt={product.name} />\r\n                        </Col>\r\n\r\n                        <Col className='m-4'>\r\n\r\n                            <h3 className='text-center'>{product.name}</h3>\r\n\r\n                            <Rating value={product.rating} reviews={product.numReviews} />\r\n\r\n                            <p className='text-center'>{product.description}</p>\r\n\r\n                            <h4 className='text-center'>Specifications</h4>\r\n                            <div className='my-4'>\r\n                                <p>Color: Brown</p>\r\n                                <p>Material: Pine</p>\r\n                                <p>Dimensions: N/A</p>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col className='m-4' style={{ 'background': 'var(--clr-brown)' }}>\r\n                            <Row className=\"m-4 text-center\">\r\n                                <Col>\r\n                                    <h4>${product.price}</h4>\r\n                                    <Button onClick={addToCartHandler} disabled={product.countInStock === 0}>Add to Cart</Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>Free Delivery</h5>\r\n                                    <p className=\"bold\">Wednesday, June 2nd</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>In Stock</h5>\r\n\r\n                                    {product.countInStock === 0 ? (\r\n                                        <p className=\"bold\">Out of Stock</p>\r\n                                    ) : <p className=\"bold\">{product.countInStock}</p>}\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>Return Policy</h5>\r\n                                    <p className=\"bold\">Returnable</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Product Review Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 text-center'>\r\n                    <h2>Reviews & Questions</h2>\r\n                    <p>Reviews are currently unavailable</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductScreen;","import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// Import Actions\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst Login = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo) { // If user is logged in, redirect\r\n            history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo, dispatch])\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Form className='p-3' onSubmit={loginHandler}>\r\n            <Form.Group className='mb-2'>\r\n                <Form.Label className='mb-2'>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label className='my-2'>Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button className='d-block mt-4 mx-auto' type='submit'>Login</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Login;","import { Container, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Login from '../components/forms/Login';\r\nimport \"../css/screens/LoginScreen.css\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error } = userLogin\r\n\r\n    return (\r\n        <Container fluid id='login-background'>\r\n\r\n            <div className=\"user-access-container\">\r\n                <div className=\"transparent-background\"></div>\r\n                <div className=\"user-access-form flex-c\">\r\n                    <h2 className=\"flex\">Log In</h2>\r\n\r\n                    <Login location={location} history={history} />\r\n\r\n                    <p className='my-2'>Don't have an account? <Link to=\"/register\"><strong>Register</strong></Link></p>\r\n\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                </div>\r\n            </div>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { register } from '../../actions/userActions';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo) { // If user is logged in, redirect\r\n            history.push('/account')\r\n        }\r\n    }, [history, userInfo, dispatch])\r\n\r\n    const registerHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            console.log('Passwords do not match')\r\n        } else {\r\n            dispatch(register(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className='p-3' onSubmit={registerHandler}>\r\n            <Form.Group className='mb-2'>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-2'>\r\n                <Form.Label>Create Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Create Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Retype Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button className='d-block mt-4 mx-auto' type='submit'>Register</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Register;","import { Container, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n\r\n/* Import Components */\r\nimport Register from '../components/forms/Register';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error } = userRegister\r\n\r\n    return (\r\n        <Container fluid id=\"register-background\">\r\n\r\n            <div className=\"user-access-container\">\r\n                <div className=\"transparent-background\"></div>\r\n                <div className=\"user-access-form flex-c\">\r\n                    <h2 className=\"flex\">Create an Account</h2>\r\n\r\n                    <Register history={history} />\r\n\r\n                    <p className='my-2'>Already have an account? <Link className=\"margin-left\" to=\"/login\"><strong>Sign In</strong></Link></p>\r\n\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                </div>\r\n            </div>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;","import { useEffect, useState } from 'react'\r\nimport { Container, Row, Col, Form, Button, Alert, Table, Spinner } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUserOrders } from '../actions/orderActions';\r\nimport { updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst AccountScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success } = userUpdate\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: ordersLoading, error: ordersError, orders } = orderListMy\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Ensure that the user is logged in before viewing this page\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n\r\n            setEmail(userInfo.email)\r\n\r\n            dispatch(getUserOrders())\r\n\r\n            if (success) { // Executes when the user updates their account info\r\n                dispatch({ type: USER_UPDATE_RESET })\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setMessage('Account Updated')\r\n            }\r\n\r\n        } else {\r\n            history.push('/login?redirect=account')\r\n        }\r\n\r\n    }, [history, userInfo, success, dispatch])\r\n\r\n    const updateUserHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUser(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>My Account</h1>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <h2>Account Details</h2>\r\n\r\n                    {message && <Alert variant='primary'>{message}</Alert>}\r\n\r\n                    <Form className='p-2' onSubmit={updateUserHandler}>\r\n\r\n                        {/* EMAIL */}\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"text\"\r\n                            placeholder='Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        {/* PASSWORD & CONFIRM PASSWORD */}\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"password\"\r\n                            placeholder='Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"password\"\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Button type='submit'>Update</Button>\r\n                    </Form>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <h2>My Orders</h2>\r\n\r\n                    {ordersLoading ? (\r\n                        <Spinner />\r\n                    ) : ordersError ? (\r\n                        <Alert variant='danger'>{ordersError}</Alert>\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delievered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            <i class=\"fas fa-check\" style={{ color: '#4C8076' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td><i className='fas fa-times' style={{ color: 'red' }}></i></td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>View</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AccountScreen;","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL\r\n} from '../constants/orderConstants';\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}","import { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, ListGroup, Form, Button, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\n// FIXME: If an item is already in a user's cart, but the price has an update on the backend, it does not update in the user's cart...\r\n// FIXME: With the issue mentioned above, we may have a similar issue with the stock count if it's updated on the backend as well.\r\n\r\nconst CartScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>My Cart</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <h2 className='p-2'>Items In Cart</h2>\r\n\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((product, index) => (\r\n                            <ListGroup.Item key={index} style={{ background: '#402E32' }} className='p-4'>\r\n                                <Row>\r\n                                    <Col md={2} className='flex p-0'>\r\n                                        <Image src={product.image} alt={product.name} style={{ width: '50px' }} fluid />\r\n                                    </Col>\r\n\r\n                                    <Col md={4} className='flex p-0'>\r\n                                        <Link className='product-link' to={`/products/${product.product}`}>{product.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2} className='flex p-0'>\r\n                                        ${product.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3} className='flex'>\r\n                                        <Form.Control\r\n                                            size=\"sm\"\r\n                                            style={{ maxWidth: '100px' }}\r\n                                            as=\"select\"\r\n                                            value={product.qty}\r\n                                            onChange={(e) => dispatch(addToCart(product.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1} className='flex'>\r\n                                        <Button onClick={() => { removeFromCartHandler(product.product) }}><i class=\"fas fa-minus\"></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <h2 className='py-2'>Cart Details</h2>\r\n\r\n                    <Card style={{ background: '#402E32' }} className='my-2'>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item style={{ background: '#402E32' }}>\r\n                                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        <ListGroup className='p-3' style={{ background: '#402E32' }}>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block mx-auto'\r\n                                style={{ maxWidth: '250px' }}\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CartScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress, cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login?redirect=shipping')\r\n        } else if (cartItems.length === 0) {\r\n            history.push('/')\r\n        }\r\n    }, [history, userInfo, cartItems])\r\n\r\n    const shippingHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Shipping Details</h1>\r\n\r\n            <Form className='m-4' onSubmit={shippingHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress, cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login?redirect=shipping')\r\n        } else if (cartItems.length === 0) {\r\n            history.push('/')\r\n        } else if (!shippingAddress.address) {\r\n            history.push('/shipping')\r\n        }\r\n    }, [history, userInfo, cartItems, shippingAddress])\r\n\r\n    const paymentHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Payment Details</h1>\r\n\r\n            <Form className='m-4' onSubmit={paymentHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Image, Card, ListGroup, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number(cart.itemsPrice * (0.082)).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history, dispatch, order])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Review Order</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode}\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Alert variant='info'>\r\n                                Your cart is empty\r\n                            </Alert> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X {item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card style={{ background: '#402E32' }}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total Price:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Alert variant='danger'>{error}</Alert>\r\n                                </ListGroup.Item>\r\n                            }\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, ListGroup, Image, Card, Alert, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    // Ac734GI9sLLGYLFwxW1akkR_CT7ImW573aza3DJiOdh6CEhdCCNU6IoobSiYcLsZb7oT2ruiX1iG2j6d\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=Ac734GI9sLLGYLFwxW1akkR_CT7ImW573aza3DJiOdh6CEhdCCNU6IoobSiYcLsZb7oT2ruiX1iG2j6d'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!order || successPay || order._id !== Number(orderId)) {\r\n\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        } else if (!order.isPaid) {\r\n\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, order, orderId, successPay])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <div>\r\n                    <h1 className='my-4'>Order: {order._id}</h1>\r\n\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                        {'   '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                        {'   '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Alert variant='success'>Delievered on {order.deliveredAt}</Alert>\r\n                                    ) : (\r\n                                        <Alert variant='warning'>Not delievered</Alert>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment</h2>\r\n\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n\r\n                                    {order.isPaid ? (\r\n                                        <Alert variant='success'>Paid on {new Date(order.paidAt).toLocaleString()}</Alert>\r\n                                    ) : (\r\n                                        <Alert variant='warning'>Not paid</Alert>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Alert variant='info'>\r\n                                        Order is empty\r\n                                    </Alert> : (\r\n                                        <ListGroup variant='flush'>\r\n                                            {order.orderItems.map((item, index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                        </Col>\r\n\r\n                                                        <Col>\r\n                                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                        </Col>\r\n\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X {item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card style={{ background: '#402E32' }}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Item:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total Price:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Spinner />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Spinner />\r\n                                            ) : (\r\n                                                <PayPalButton\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;","import { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Button, Table, Spinner, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success } = userDelete\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        } else {\r\n            dispatch(listUsers())\r\n        }\r\n\r\n    }, [dispatch, history, success, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Users</h1>\r\n\r\n            {loading ? (\r\n                <Loader message={\"Loading Users\"} />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}</td>\r\n\r\n                                <td className='flex'>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`} className='m-2'>\r\n                                        <Button><i className='fas fa-edit'></i></Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button onClick={() => deleteHandler(user._id)} className='m-2 red'><i className='fas fa-trash'></i></Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserListScreen;","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { getUserDetails, adminUpdateUser } from '../actions/userActions';\r\nimport { USER_ADMIN_UPDATE_RESET, USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userAdminUpdate = useSelector(state => state.userAdminUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userAdminUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        // If logged in user is not an admin, redirect\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // If successful user update, redirect to user list screen\r\n        if (successUpdate) {\r\n\r\n            dispatch({ type: USER_ADMIN_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n\r\n        } else { // Otherwise fetch user info\r\n\r\n            if (!user || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, user, userId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(adminUpdateUser({\r\n            _id: user._id,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Edit User</h1>\r\n\r\n            <Link to='/admin/userlist'><Button><i className=\"fas fa-chevron-left mx-1\"></i>Go Back</Button></Link>\r\n\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Alert variant='danger' className='my-4'>{errorUpdate}</Alert>}\r\n\r\n            {loading ? (\r\n                <Loader message={\"Loading User Details\"} />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    {/* NAME */}\r\n                    <Form.Control\r\n                        className='my-3'\r\n                        type=\"text\"\r\n                        placeholder='Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n\r\n                    {/* EMAIL */}\r\n\r\n                    <Form.Control\r\n                        className='my-3'\r\n                        type=\"text\"\r\n                        placeholder='Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    {/* ADMIN STATUS */}\r\n\r\n                    <Form.Check\r\n                        className='my-3'\r\n                        type=\"checkbox\"\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    />\r\n\r\n                    <Button type='submit'>Update</Button>\r\n                </Form>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserEditScreen;","import { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Button, Table, Row, Col, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions';\r\n\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts())\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct])\r\n\r\n    const createProductHandler = (product) => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className='my-4'>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-4' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader message={'Deleting Product...'} />}\r\n            {errorDelete && <Alert variant='danger'>{errorDelete}</Alert>}\r\n\r\n            {loadingCreate && <Loader message={'Creating Product...'} />}\r\n            {errorCreate && <Alert variant='danger'>{errorCreate}</Alert>}\r\n\r\n            <Row>\r\n                {loading ? (\r\n                    <Loader message={'Fetching Products...'} />\r\n                ) : error ? (\r\n                    <Alert variant='danger'>{error}</Alert>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n\r\n                                    <td className='flex'>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`} className='m-2'>\r\n                                            <Button><i className='fas fa-edit'></i></Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button onClick={() => deleteHandler(product._id)} className='m-2 red'><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductListScreen;","import axios from 'axios';\r\nimport { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        // If logged in user is not an admin, redirect\r\n        if (!userInfo || !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (!product || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, product, productId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n        } catch (error) {\r\n            setUploading(false)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Edit Product</h1>\r\n\r\n            <Link to='/admin/productlist'><Button><i className=\"fas fa-chevron-left mx-1\"></i>Go Back</Button></Link>\r\n\r\n            {loadingUpdate && <Loader message={\"Updating Product\"} />}\r\n            {errorUpdate && <Alert variant='danger' className='my-4'>{errorUpdate}</Alert>}\r\n\r\n            {loading ? (\r\n                <Loader message={\"Loading Product Details\"} />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <Form onSubmit={submitHandler} className=\"my-4\">\r\n                    {/* NAME */}\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder='Name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {/* PRICE */}\r\n                    <Form.Group controlId=\"price\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder='Price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {/* IMAGE */}\r\n                    {/* TODO: CHANGE TO FILE UPLOAD FIELD */}\r\n                    <Form.Group controlId=\"image\">\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder='Image'\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                            disabled\r\n                        />\r\n\r\n                        <Form.File\r\n                            id=\"image-file\"\r\n                            label='Choose File'\r\n                            custom\r\n                            onChange={uploadFileHandler}\r\n                        >\r\n\r\n                        </Form.File>\r\n\r\n                        {uploading && <Loader message={\"Uploading Image...\"} />}\r\n\r\n                    </Form.Group>\r\n\r\n                    {/* BRAND */}\r\n                    <Form.Group controlId=\"brand\">\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder='Brand'\r\n                            value={brand}\r\n                            onChange={(e) => setBrand(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {/* CATEGORY */}\r\n                    <Form.Group controlId=\"category\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            placeholder='Category'\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {/* COUNT IN STOCK */}\r\n                    <Form.Group controlId=\"countInStock\">\r\n                        <Form.Label>Quantity In Stock</Form.Label>\r\n                        <Form.Control\r\n                            type=\"number\"\r\n                            placeholder='Stock'\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    {/* DESCRIPTION */}\r\n                    <Form.Group controlId=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            placeholder='Enter Description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit'>Update</Button>\r\n                </Form>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductEditScreen;","import { useState, useRef, useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\n/* Import Components */\nimport Header from \"./components/Header\"\nimport SidebarNav from \"./components/SidebarNav\"\nimport Footer from \"./components/Footer\"\n\n/* Import Screens */\nimport HomeScreen from \"./screens/HomeScreen\"\n\nimport ProductsScreen from './screens/ProductsScreen'\nimport ProductScreen from './screens/ProductScreen'\n\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport AccountScreen from './screens/AccountScreen'\n\nimport CartScreen from './screens/CartScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\n\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\n\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\n\nfunction App() {\n\tconst [show, setShow] = useState(false)\n\tconst [icon, setIcon] = useState('bars')\n\tconst SidebarRef = useRef()\n\n\tconst toggleNav = () => {\n\t\tif (show) {\n\t\t\tSidebarRef.current.classList.add('hide')\n\t\t\tsetShow(false)\n\t\t\tsetIcon('bars')\n\t\t}\n\t\telse {\n\t\t\tSidebarRef.current.classList.remove('hide')\n\t\t\tsetShow(true)\n\t\t\tsetIcon('times')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t<Header toggleNav={toggleNav} icon={icon} />\n\n\t\t\t<Container fluid>\n\t\t\t\t<div className=\"nav-container hide\" ref={SidebarRef}>\n\t\t\t\t\t<SidebarNav />\n\t\t\t\t</div>\n\n\t\t\t\t<Route path='/' component={HomeScreen} exact />\n\t\t\t\t<Route path='/products' component={ProductsScreen} exact />\n\t\t\t\t<Route path='/products/:id' component={ProductScreen} />\n\n\t\t\t\t<Route path='/login' component={LoginScreen} />\n\t\t\t\t<Route path='/register' component={RegisterScreen} />\n\t\t\t\t<Route path='/account' component={AccountScreen} />\n\n\t\t\t\t<Route path='/cart' component={CartScreen} />\n\t\t\t\t<Route path='/shipping' component={ShippingScreen} />\n\t\t\t\t<Route path='/payment' component={PaymentScreen} />\n\t\t\t\t<Route path='/placeorder' component={PlaceOrderScreen} />\n\t\t\t\t<Route path='/order/:id' component={OrderScreen} />\n\n\t\t\t\t<Route path='/admin/userlist' component={UserListScreen} />\n\t\t\t\t<Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n\t\t\t\t<Route path='/admin/productlist' component={ProductListScreen} />\n\t\t\t\t<Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n\t\t\t</Container>\n\n\t\t\t<Footer />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* CSS Imports */\nimport './css/bootstrap.min.css';\nimport './css/site.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}