{"version":3,"sources":["constants/userConstants.js","constants/cartConstants.js","constants/orderConstants.js","constants/productConstants.js","store.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","reducers/productReducers.js","components/Header.js","components/SidebarNav.js","actions/userActions.js","components/Footer.js","components/Rating.js","actions/cartActions.js","components/ProductCard.js","components/Loader.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductsScreen.js","screens/ProductScreen.js","components/forms/Login.js","screens/LoginScreen.js","components/forms/Register.js","screens/RegisterScreen.js","screens/AccountScreen.js","actions/orderActions.js","screens/CartScreen.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_ADMIN_UPDATE_REQUEST","USER_ADMIN_UPDATE_SUCCESS","USER_ADMIN_UPDATE_FAIL","USER_ADMIN_UPDATE_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","reducer","combineReducers","userLogin","state","action","type","loading","userInfo","payload","error","userRegister","userUpdate","success","userList","users","userDetails","user","userDelete","userAdminUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","product","map","filter","paymentMethod","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","productList","products","productDetails","reviews","productDelete","initalState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","toggleNav","icon","className","to","style","display","href","cursor","onClick","SidebarNav","useSelector","dispatch","useDispatch","email","Button","removeItem","isAdmin","Footer","Rating","value","color","margin","addToCart","id","qty","getState","a","axios","get","data","_id","name","image","price","countInStock","setItem","stringify","ProductCard","Card","width","maxHeight","minHeight","Img","src","alt","Body","Title","rating","numReviews","Text","description","Loader","message","Spinner","animation","listProducts","response","HomeScreen","useEffect","Container","fluid","Row","Col","xs","sm","md","lg","ProductsScreen","placeholder","defaultValue","ProductScreen","match","params","border","disabled","Login","location","history","useState","setEmail","password","setPassword","redirect","search","split","push","Form","onSubmit","e","preventDefault","config","headers","post","detail","login","Group","Label","Control","onChange","target","LoginScreen","Alert","variant","Register","confirmPassword","setConfirmPassword","console","log","register","RegisterScreen","AccountScreen","setMessage","ordersLoading","ordersError","Authorization","token","put","updateUser","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","class","CartScreen","removeFromCartHandler","removeFromCart","ListGroup","index","Item","background","Image","size","maxWidth","as","Number","Array","keys","reduce","acc","toFixed","length","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","controlId","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","rounded","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","isDelivered","deliveredAt","Date","paidAt","toLocaleString","amount","onSuccess","paymentResult","payOrder","UserListScreen","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setName","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","adminUpdateUser","ProductListScreen","loadingDelete","errorDelete","successDelete","deleteProduct","category","brand","App","show","setShow","setIcon","SidebarRef","useRef","current","classList","add","remove","ref","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ecc176ee.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_ADMIN_UPDATE_REQUEST = 'USER_ADMIN_UPDATE_REQUEST'\r\nexport const USER_ADMIN_UPDATE_SUCCESS = 'USER_ADMIN_UPDATE_SUCCESS'\r\nexport const USER_ADMIN_UPDATE_FAIL = 'USER_ADMIN_UPDATE_FAIL'\r\nexport const USER_ADMIN_UPDATE_RESET = 'USER_ADMIN_UPDATE_RESET'","export const CART_ADD_ITEM = \"CARD_ADD_ITEM\"\r\nexport const CART_REMOVE_ITEM = \"CARD_REMOVE_ITEM\"\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n/* Import Reducers */\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer, userListReducer, userDetailsReducer, userDeleteReducer, userAdminUpdateReducer } from './reducers/userReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer } from './reducers/productReducers';\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    userList: userListReducer,\r\n    userDetails: userDetailsReducer,\r\n    userDelete: userDeleteReducer,\r\n    userAdminUpdate: userAdminUpdateReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n\r\n    productDelete: productDeleteReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n    JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initalState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initalState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_ADMIN_UPDATE_REQUEST,\r\n    USER_ADMIN_UPDATE_SUCCESS,\r\n    USER_ADMIN_UPDATE_FAIL,\r\n    USER_ADMIN_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userAdminUpdateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_ADMIN_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_ADMIN_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_ADMIN_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_ADMIN_UPDATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_CLEAR_ITEMS\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return { orders: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","/* Import Constants */\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/* Import CSS */\r\nimport \"../css/components/Header.css\";\r\n\r\nconst Header = ({ toggleNav, icon }) => {\r\n    return (\r\n        <header className=\"flex\">\r\n            <Link className='text-decoration-none' to='/'><h4 className='m-0'>Amenity Furniture</h4></Link>\r\n\r\n            <div className=\"flex\">\r\n                <div className=\"flex\" style={{ display: \"none\" }}>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-chair\"></i>Products</a>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-shopping-cart\"></i>Cart</a>\r\n                    <a href=\"/\" className=\"header-link\"><i className=\"fas fa-user\"></i>Login</a>\r\n                </div>\r\n\r\n                <i className={`fas fa-${icon}`} style={{ cursor: 'pointer' }} onClick={toggleNav}></i>\r\n            </div>\r\n\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;","import { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n/* Import CSS */\r\nimport \"../css/components/SidebarNav.css\";\r\n\r\n// Import Logout Action\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst SidebarNav = () => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <nav className=\"flex\">\r\n\r\n            {userInfo ? (\r\n                <div className=\"flex-c\">\r\n                    <p>{userInfo.email}</p>\r\n                    <Button onClick={logoutHandler}>Logout</Button>\r\n                </div>\r\n            ) : (\r\n                <div className=\"flex-c\">\r\n                    <p>Welcome, Guest</p>\r\n                    <Link to='/login' className=\"btn\">Login</Link>\r\n                </div>\r\n            )}\r\n\r\n            <div className='my-4'>\r\n                <Link to='/cart' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-shopping-cart\"></i>My Cart</Link>\r\n                <Link to='/account' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-user\"></i>Account</Link>\r\n\r\n                <Link to='/products' className=\"my-3 btn d-block\"><i className=\"mx-2 fas fa-chair\"></i>Products</Link>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            {userInfo && userInfo.isAdmin ? (\r\n                <div>\r\n                    <p className='flex'>Admin Panel</p>\r\n                    <Link to='/admin/userlist' className=\"my-3 btn d-block\">View Users</Link>\r\n                    <Link to='/admin/productlist' className=\"my-3 btn d-block\">Edit Products</Link>\r\n                    <Link to='/admin/orderlist' className=\"my-3 btn d-block\">View Orders</Link>\r\n                </div>\r\n            ) : (\r\n                <span></span>\r\n            )}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default SidebarNav;","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_ADMIN_UPDATE_REQUEST,\r\n    USER_ADMIN_UPDATE_SUCCESS,\r\n    USER_ADMIN_UPDATE_FAIL,\r\n    USER_ADMIN_UPDATE_RESET,\r\n} from '../constants/userConstants';\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n\r\n}\r\n\r\nexport const register = (email, password) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUser = (email, password) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            '/api/users/update/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_LIST_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_LIST_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const adminUpdateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_ADMIN_UPDATE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: USER_ADMIN_UPDATE_SUCCESS })\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_ADMIN_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}","/* Import CSS */\r\nimport \"../css/components/Footer.css\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <h1>Amenity Furniture</h1>\r\n            <p><small>Copyright &copy; 2021</small></p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// <i class=\"fas fa-star\"></i>\r\n// <i class=\"fas fa-star-half\"></i>\r\n\r\nconst Rating = ({ value, reviews }) => {\r\n    const color = \"#E6E665\";\r\n\r\n    return (\r\n        <div className=\"flex rating my-3\">\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <span className=\"star\">\r\n                <i style={{ color }} className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                }>\r\n\r\n                </i>\r\n            </span>\r\n\r\n            <p style={{ margin: '0 0.25em' }}>{reviews && reviews}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rating;","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import { Card, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport \"../css/components/ProductCard.css\";\r\nimport Rating from './Rating';\r\n\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst ProductCard = ({ product }) => {\r\n\r\n    return (\r\n        <LinkContainer to={`/products/${product._id}`}>\r\n            <Card className=\"mx-auto product-card\">\r\n                <div style={{ width: '100%', maxHeight: '250px', minHeight: '200px', margin: '0 auto' }}>\r\n                    <Card.Img src={product.image} className=\"p-3 product-img\" alt={product.name} />\r\n                </div>\r\n\r\n                <Card.Body>\r\n                    <Card.Title>{product.name}</Card.Title>\r\n\r\n                    <Rating value={product.rating} reviews={product.numReviews} />\r\n\r\n                    <Card.Text>{product.description}</Card.Text>\r\n\r\n                </Card.Body>\r\n\r\n                <Card.Footer>${product.price}</Card.Footer>\r\n            </Card>\r\n        </LinkContainer>\r\n    );\r\n}\r\n\r\nexport default ProductCard;","import { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = ({ message }) => {\r\n    return (\r\n        <div className='flex-c'>\r\n            <Spinner animation=\"grow\" className='my-3 white' />\r\n            <p className='flex'>{message}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import axios from 'axios';\r\n\r\n/* Import constants */\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL\r\n} from '../constants/productConstants';\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}","import { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport '../css/screens/HomeScreen.css';\r\n\r\n/* Import Components */\r\nimport ProductCard from '../components/ProductCard';\r\nimport Loader from '../components/Loader';\r\n\r\n/* Import Actions */\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container fluid>\r\n\r\n            {/* Welcome Section */}\r\n\r\n            <div className='mx-auto welcome-section'>\r\n\r\n                <div className='welcome-section-image'></div>\r\n\r\n                <div className='welcome-section-text'>\r\n                    <h1>Amenity Furniture</h1>\r\n                    <p>For all your home furnishing needs.</p>\r\n                    <Link to='/products' className=\"btn\">View Products</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* Featured Products Section */}\r\n\r\n            <Row className='mx-auto py-4'>\r\n                <Col>\r\n                    <h1 className='mx-auto text-center'>Featured Products</h1>\r\n\r\n                    <div className=\"mx-auto py-3\">\r\n                        {\r\n                            loading ? <Loader message='Fetching our current favorites...' />\r\n                                : error ? <p>{error}</p>\r\n                                    : <Row className='product-list mx-auto'>\r\n                                        {\r\n                                            products.map(product => (\r\n                                                <Col key={product._id} className='mx-auto my-2' xs={12} sm={6} md={4} lg={3}>\r\n                                                    <ProductCard product={product} />\r\n                                                </Col>\r\n                                            ))\r\n                                        }\r\n                                    </Row>\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default HomeScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport ProductCard from '../components/ProductCard';\r\nimport Loader from '../components/Loader';\r\n\r\n/* Import Actions */\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst ProductsScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const productList = useSelector(state => state.productList);\r\n    const { error, loading, products } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Container>\r\n\r\n            {/* Product Filter Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 flex'>\r\n                    <input type=\"text\" className='mx-2 p-2' placeholder=\"Search Products\" />\r\n\r\n                    <select name=\"categories\" id=\"\" defaultValue=\"all\" style={{ display: \"none\" }}>\r\n                        <option value=\"all\">All</option>\r\n                        <option value=\"tables\">Tables</option>\r\n                        <option value=\"chairs\">Chairs</option>\r\n                        <option value=\"lights\">Lights</option>\r\n                    </select>\r\n\r\n                    <Button><i className=\"fas fa-filter\"></i></Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Display Products */}\r\n\r\n            {\r\n                // TODO: Improve loading message. Maybe add a little animation while loading?\r\n                // TODO: Improve error message. Maybe make both the loading / error message a component?\r\n\r\n                loading ? <Loader message='Fetching amazing products...' /> // If loading, show loading message\r\n\r\n                    : error ? <p>{error}</p> // If error, show error message\r\n\r\n                        // If not loading, or no error, show products\r\n                        : <Row className=\"product-list\">\r\n                            {\r\n                                products.map(product => (\r\n                                    <Col className='my-2' key={product._id}>\r\n                                        <ProductCard product={product} />\r\n                                    </Col>\r\n                                ))\r\n                            }\r\n                        </Row>\r\n            }\r\n\r\n            {/* Pagination Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 flex'>\r\n                    <Button className='mx-3'><i className=\"fas fa-chevron-left\"></i></Button>\r\n\r\n                    <Link to={'/'} className=\"mx-2 active\">1</Link>\r\n                    <Link to={'/'} className=\"mx-2\">2</Link>\r\n                    <Link to={'/'} className=\"mx-2\">3</Link>\r\n\r\n                    <Button className='mx-3'><i className=\"fas fa-chevron-right\"></i></Button>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductsScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/* Import Components */\r\nimport Rating from '../components/Rating';\r\n\r\n/* Import Actions */\r\nimport { listProductDetails } from '../actions/productActions';\r\nimport { addToCart } from '../actions/cartActions';\r\n\r\nconst ProductScreen = ({ match }) => {\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { error, loading, product } = productDetails;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, 1))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n\r\n                {/* Main Product Details */}\r\n\r\n                <Col>\r\n                    <Row>\r\n                        <Col className='my-auto py-4'>\r\n                            <img src={product.image} className=\"product-img flex\" style={{ border: \"0.75em solid #402E32\" }} alt={product.name} />\r\n                        </Col>\r\n\r\n                        <Col className='m-4'>\r\n\r\n                            <h3 className='text-center'>{product.name}</h3>\r\n\r\n                            <Rating value={product.rating} reviews={product.numReviews} />\r\n\r\n                            <p className='text-center'>{product.description}</p>\r\n\r\n                            <h4 className='text-center'>Specifications</h4>\r\n                            <div className='my-4'>\r\n                                <p>Color: Brown</p>\r\n                                <p>Material: Pine</p>\r\n                                <p>Dimensions: N/A</p>\r\n                            </div>\r\n                        </Col>\r\n\r\n                        <Col className='m-4' style={{ 'background': 'var(--clr-brown)' }}>\r\n                            <Row className=\"m-4 text-center\">\r\n                                <Col>\r\n                                    <h4>${product.price}</h4>\r\n                                    <Button onClick={addToCartHandler} disabled={product.countInStock === 0}>Add to Cart</Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>Free Delivery</h5>\r\n                                    <p className=\"bold\">Wednesday, June 2nd</p>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>In Stock</h5>\r\n\r\n                                    {product.countInStock === 0 ? (\r\n                                        <p className=\"bold\">Out of Stock</p>\r\n                                    ) : <p className=\"bold\">{product.countInStock}</p>}\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"m-2 text-center\">\r\n                                <Col>\r\n                                    <h5>Return Policy</h5>\r\n                                    <p className=\"bold\">Returnable</p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Product Review Section */}\r\n\r\n            <Row>\r\n                <Col className='my-4 text-center'>\r\n                    <h2>Reviews & Questions</h2>\r\n                    <p>Reviews are currently unavailable</p>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductScreen;","import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n// Import Actions\r\nimport { login } from '../../actions/userActions';\r\n\r\nconst Login = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo) { // If user is logged in, redirect\r\n            history.push(redirect)\r\n        }\r\n    }, [history, redirect, userInfo, dispatch])\r\n\r\n    const loginHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Form className='p-3' onSubmit={loginHandler}>\r\n            <Form.Group className='mb-2'>\r\n                <Form.Label className='mb-2'>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label className='my-2'>Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button className='d-block mt-4 mx-auto' type='submit'>Login</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Login;","import { Container, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Login from '../components/forms/Login';\r\nimport \"../css/screens/LoginScreen.css\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error } = userLogin\r\n\r\n    return (\r\n        <Container fluid id='login-background'>\r\n\r\n            <div className=\"user-access-container\">\r\n                <div className=\"transparent-background\"></div>\r\n                <div className=\"user-access-form flex-c\">\r\n                    <h2 className=\"flex\">Log In</h2>\r\n\r\n                    <Login location={location} history={history} />\r\n\r\n                    <p className='my-2'>Don't have an account? <Link to=\"/register\"><strong>Register</strong></Link></p>\r\n\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                </div>\r\n            </div>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default LoginScreen;","import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { register } from '../../actions/userActions';\r\n\r\nconst Register = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (userInfo) { // If user is logged in, redirect\r\n            history.push('/account')\r\n        }\r\n    }, [history, userInfo, dispatch])\r\n\r\n    const registerHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            console.log('Passwords do not match')\r\n        } else {\r\n            dispatch(register(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className='p-3' onSubmit={registerHandler}>\r\n            <Form.Group className='mb-2'>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-2'>\r\n                <Form.Label>Create Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Create Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n                <Form.Label>Retype Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Retype Password\"\r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button className='d-block mt-4 mx-auto' type='submit'>Register</Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Register;","import { Container, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n\r\n/* Import Components */\r\nimport Register from '../components/forms/Register';\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error } = userRegister\r\n\r\n    return (\r\n        <Container fluid id=\"register-background\">\r\n\r\n            <div className=\"user-access-container\">\r\n                <div className=\"transparent-background\"></div>\r\n                <div className=\"user-access-form flex-c\">\r\n                    <h2 className=\"flex\">Create an Account</h2>\r\n\r\n                    <Register history={history} />\r\n\r\n                    <p className='my-2'>Already have an account? <Link className=\"margin-left\" to=\"/login\"><strong>Sign In</strong></Link></p>\r\n\r\n                    {error && <Alert variant='danger'>{error}</Alert>}\r\n                </div>\r\n            </div>\r\n\r\n        </Container >\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;","import { useEffect, useState } from 'react'\r\nimport { Container, Row, Col, Form, Button, Alert, Table, Spinner } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUserOrders } from '../actions/orderActions';\r\nimport { updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst AccountScreen = ({ history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success } = userUpdate\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: ordersLoading, error: ordersError, orders } = orderListMy\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    // Ensure that the user is logged in before viewing this page\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n\r\n            setEmail(userInfo.email)\r\n\r\n            dispatch(getUserOrders())\r\n\r\n            if (success) { // Executes when the user updates their account info\r\n                dispatch({ type: USER_UPDATE_RESET })\r\n                setPassword('')\r\n                setConfirmPassword('')\r\n                setMessage('Account Updated')\r\n            }\r\n\r\n        } else {\r\n            history.push('/login?redirect=account')\r\n        }\r\n\r\n    }, [history, userInfo, success, dispatch])\r\n\r\n    const updateUserHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUser(email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>My Account</h1>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <h2>Account Details</h2>\r\n\r\n                    {message && <Alert variant='primary'>{message}</Alert>}\r\n\r\n                    <Form className='p-2' onSubmit={updateUserHandler}>\r\n\r\n                        {/* EMAIL */}\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"text\"\r\n                            placeholder='Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n\r\n                        {/* PASSWORD & CONFIRM PASSWORD */}\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"password\"\r\n                            placeholder='Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Form.Control\r\n                            className='my-3'\r\n                            type=\"password\"\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        />\r\n\r\n                        <Button type='submit'>Update</Button>\r\n                    </Form>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <h2>My Orders</h2>\r\n\r\n                    {ordersLoading ? (\r\n                        <Spinner />\r\n                    ) : ordersError ? (\r\n                        <Alert variant='danger'>{ordersError}</Alert>\r\n                    ) : (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delievered</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>${order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            <i class=\"fas fa-check\" style={{ color: '#4C8076' }}></i>\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}</td>\r\n                                        <td><i className='fas fa-times' style={{ color: 'red' }}></i></td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>View</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AccountScreen;","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL\r\n} from '../constants/orderConstants';\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const getUserOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        });\r\n    }\r\n}","import { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, ListGroup, Form, Button, Image, Card } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\n// FIXME: If an item is already in a user's cart, but the price has an update on the backend, it does not update in the user's cart...\r\n// FIXME: With the issue mentioned above, we may have a similar issue with the stock count if it's updated on the backend as well.\r\n\r\nconst CartScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>My Cart</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <h2 className='p-2'>Items In Cart</h2>\r\n\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((product, index) => (\r\n                            <ListGroup.Item key={index} style={{ background: '#402E32' }} className='p-4'>\r\n                                <Row>\r\n                                    <Col md={2} className='flex p-0'>\r\n                                        <Image src={product.image} alt={product.name} style={{ width: '50px' }} fluid />\r\n                                    </Col>\r\n\r\n                                    <Col md={4} className='flex p-0'>\r\n                                        <Link className='product-link' to={`/products/${product.product}`}>{product.name}</Link>\r\n                                    </Col>\r\n\r\n                                    <Col md={2} className='flex p-0'>\r\n                                        ${product.price}\r\n                                    </Col>\r\n\r\n                                    <Col md={3} className='flex'>\r\n                                        <Form.Control\r\n                                            size=\"sm\"\r\n                                            style={{ maxWidth: '100px' }}\r\n                                            as=\"select\"\r\n                                            value={product.qty}\r\n                                            onChange={(e) => dispatch(addToCart(product.product, Number(e.target.value)))}\r\n                                        >\r\n                                            {\r\n                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key={x + 1} value={x + 1}>\r\n                                                        {x + 1}\r\n                                                    </option>\r\n                                                ))\r\n                                            }\r\n                                        </Form.Control>\r\n                                    </Col>\r\n\r\n                                    <Col md={1} className='flex'>\r\n                                        <Button onClick={() => { removeFromCartHandler(product.product) }}><i class=\"fas fa-minus\"></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col>\r\n                    <h2 className='py-2'>Cart Details</h2>\r\n\r\n                    <Card style={{ background: '#402E32' }} className='my-2'>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item style={{ background: '#402E32' }}>\r\n                                <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        <ListGroup className='p-3' style={{ background: '#402E32' }}>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block mx-auto'\r\n                                style={{ maxWidth: '250px' }}\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default CartScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress, cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login?redirect=shipping')\r\n        } else if (cartItems.length === 0) {\r\n            history.push('/')\r\n        }\r\n    }, [history, userInfo, cartItems])\r\n\r\n    const shippingHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Shipping Details</h1>\r\n\r\n            <Form className='m-4' onSubmit={shippingHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ShippingScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress, cartItems } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login?redirect=shipping')\r\n        } else if (cartItems.length === 0) {\r\n            history.push('/')\r\n        } else if (!shippingAddress.address) {\r\n            history.push('/shipping')\r\n        }\r\n    }, [history, userInfo, cartItems, shippingAddress])\r\n\r\n    const paymentHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Payment Details</h1>\r\n\r\n            <Form className='m-4' onSubmit={paymentHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PaymentScreen;","import { useEffect } from 'react';\r\nimport { Container, Row, Col, Button, Image, Card, ListGroup, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number(cart.itemsPrice * (0.082)).toFixed(2)\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if (!cart.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history, dispatch, order])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Review Order</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'   '}\r\n                                {cart.shippingAddress.postalCode}\r\n                                {'   '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment</h2>\r\n\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Alert variant='info'>\r\n                                Your cart is empty\r\n                            </Alert> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X {item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card style={{ background: '#402E32' }}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total Price:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Alert variant='danger'>{error}</Alert>\r\n                                </ListGroup.Item>\r\n                            }\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default PlaceOrderScreen;","import { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, ListGroup, Image, Card, Alert, Spinner } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\n\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\r\nimport { getOrderDetails, payOrder } from '../actions/orderActions';\r\n\r\nconst OrderScreen = ({ match }) => {\r\n    // Ac734GI9sLLGYLFwxW1akkR_CT7ImW573aza3DJiOdh6CEhdCCNU6IoobSiYcLsZb7oT2ruiX1iG2j6d\r\n\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=Ac734GI9sLLGYLFwxW1akkR_CT7ImW573aza3DJiOdh6CEhdCCNU6IoobSiYcLsZb7oT2ruiX1iG2j6d'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!order || successPay || order._id !== Number(orderId)) {\r\n\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n\r\n        } else if (!order.isPaid) {\r\n\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, order, orderId, successPay])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {loading ? (\r\n                <Spinner />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <div>\r\n                    <h1 className='my-4'>Order: {order._id}</h1>\r\n\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Shipping</h2>\r\n\r\n                                    <p><strong>Name: </strong> {order.user.name}</p>\r\n                                    <p><strong>Email: </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n\r\n                                    <p>\r\n                                        <strong>Shipping: </strong>\r\n                                        {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                        {'   '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                        {'   '}\r\n                                        {order.shippingAddress.country}\r\n                                    </p>\r\n\r\n                                    {order.isDelivered ? (\r\n                                        <Alert variant='success'>Delievered on {order.deliveredAt}</Alert>\r\n                                    ) : (\r\n                                        <Alert variant='warning'>Not delievered</Alert>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment</h2>\r\n\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n\r\n                                    {order.isPaid ? (\r\n                                        <Alert variant='success'>Paid on {new Date(order.paidAt).toLocaleString()}</Alert>\r\n                                    ) : (\r\n                                        <Alert variant='warning'>Not paid</Alert>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0 ? <Alert variant='info'>\r\n                                        Order is empty\r\n                                    </Alert> : (\r\n                                        <ListGroup variant='flush'>\r\n                                            {order.orderItems.map((item, index) => (\r\n                                                <ListGroup.Item key={index}>\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                        </Col>\r\n\r\n                                                        <Col>\r\n                                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                        </Col>\r\n\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X {item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card style={{ background: '#402E32' }}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Item:</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping:</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax:</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total Price:</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {!order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Spinner />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Spinner />\r\n                                            ) : (\r\n                                                <PayPalButton\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;","import { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Button, Table, Spinner, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success } = userDelete\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, success, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Users</h1>\r\n\r\n            {loading ? (\r\n                <Spinner animation=\"border\" />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.isAdmin ? (\r\n                                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                ) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                )}</td>\r\n\r\n                                <td className='flex'>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`} className='m-2'>\r\n                                        <Button><i className='fas fa-edit'></i></Button>\r\n                                    </LinkContainer>\r\n\r\n                                    <Button onClick={() => deleteHandler(user._id)} className='m-2 red'><i className='fas fa-trash'></i></Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserListScreen;","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button, Spinner, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUserDetails, adminUpdateUser } from '../actions/userActions';\r\nimport { USER_ADMIN_UPDATE_RESET, USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userAdminUpdate = useSelector(state => state.userAdminUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userAdminUpdate\r\n\r\n    useEffect(() => {\r\n\r\n        // If logged in user is not an admin, redirect\r\n        if (userInfo && !userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        // If successful user update, redirect to user list screen\r\n        if (successUpdate) {\r\n\r\n            dispatch({ type: USER_ADMIN_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n\r\n        } else { // Otherwise fetch user info\r\n\r\n            if (!user || user._id !== Number(userId)) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, user, userId, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(adminUpdateUser({\r\n            _id: user._id,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className='my-4'>Edit User</h1>\r\n\r\n            <Link to='/admin/userlist'><Button><i className=\"fas fa-chevron-left mx-1\"></i>Go Back</Button></Link>\r\n\r\n            {loadingUpdate && <Spinner animation=\"border\" />}\r\n            {errorUpdate && <Alert variant='danger' className='my-4'>{errorUpdate}</Alert>}\r\n\r\n            {loading ? (\r\n                <Spinner animation=\"border\" />\r\n            ) : error ? (\r\n                <Alert variant='danger'>{error}</Alert>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    {/* NAME */}\r\n                    <Form.Control\r\n                        className='my-3'\r\n                        type=\"text\"\r\n                        placeholder='Name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    />\r\n\r\n                    {/* EMAIL */}\r\n\r\n                    <Form.Control\r\n                        className='my-3'\r\n                        type=\"text\"\r\n                        placeholder='Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    />\r\n\r\n                    {/* ADMIN STATUS */}\r\n\r\n                    <Form.Check\r\n                        className='my-3'\r\n                        type=\"checkbox\"\r\n                        label='Is Admin'\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    />\r\n\r\n                    <Button type='submit'>Update</Button>\r\n                </Form>\r\n            )}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default UserEditScreen;","import { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Button, Table, Row, Col, Alert } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader';\r\n\r\nimport { listProducts, deleteProduct } from '../actions/productActions';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listProducts())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete])\r\n\r\n    const createProductHandler = (product) => {\r\n        // Create Product\r\n    }\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className='my-4'>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-4' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader message={'Deleting Product...'} />}\r\n            {errorDelete && <Alert variant='danger'>{error}</Alert>}\r\n\r\n            <Row>\r\n                {loading ? (\r\n                    <Loader message={'Fetching Products...'} />\r\n                ) : error ? (\r\n                    <Alert variant='danger'>{error}</Alert>\r\n                ) : (\r\n                    <Table striped responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>PRICE</th>\r\n                                <th>CATEGORY</th>\r\n                                <th>BRAND</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(product => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n\r\n                                    <td className='flex'>\r\n                                        <LinkContainer to={`/admin/product/${product._id}/edit`} className='m-2'>\r\n                                            <Button><i className='fas fa-edit'></i></Button>\r\n                                        </LinkContainer>\r\n\r\n                                        <Button onClick={() => deleteHandler(product._id)} className='m-2 red'><i className='fas fa-trash'></i></Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ProductListScreen;","import { useState, useRef, useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\n/* Import Components */\nimport Header from \"./components/Header\"\nimport SidebarNav from \"./components/SidebarNav\"\nimport Footer from \"./components/Footer\"\n\n/* Import Screens */\nimport HomeScreen from \"./screens/HomeScreen\"\n\nimport ProductsScreen from './screens/ProductsScreen'\nimport ProductScreen from './screens/ProductScreen'\n\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport AccountScreen from './screens/AccountScreen'\n\nimport CartScreen from './screens/CartScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\n\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\n\nimport ProductListScreen from './screens/ProductListScreen';\n\nfunction App() {\n\tconst [show, setShow] = useState(false)\n\tconst [icon, setIcon] = useState('bars')\n\tconst SidebarRef = useRef()\n\n\tconst toggleNav = () => {\n\t\tif (show) {\n\t\t\tSidebarRef.current.classList.add('hide')\n\t\t\tsetShow(false)\n\t\t\tsetIcon('bars')\n\t\t}\n\t\telse {\n\t\t\tSidebarRef.current.classList.remove('hide')\n\t\t\tsetShow(true)\n\t\t\tsetIcon('times')\n\t\t}\n\t}\n\n\treturn (\n\t\t<Router>\n\t\t\t<Header toggleNav={toggleNav} icon={icon} />\n\n\t\t\t<Container fluid>\n\t\t\t\t<div className=\"nav-container hide\" ref={SidebarRef}>\n\t\t\t\t\t<SidebarNav />\n\t\t\t\t</div>\n\n\t\t\t\t<Route path='/' component={HomeScreen} exact />\n\t\t\t\t<Route path='/products' component={ProductsScreen} exact />\n\t\t\t\t<Route path='/products/:id' component={ProductScreen} />\n\n\t\t\t\t<Route path='/login' component={LoginScreen} />\n\t\t\t\t<Route path='/register' component={RegisterScreen} />\n\t\t\t\t<Route path='/account' component={AccountScreen} />\n\n\t\t\t\t<Route path='/cart' component={CartScreen} />\n\t\t\t\t<Route path='/shipping' component={ShippingScreen} />\n\t\t\t\t<Route path='/payment' component={PaymentScreen} />\n\t\t\t\t<Route path='/placeorder' component={PlaceOrderScreen} />\n\t\t\t\t<Route path='/order/:id' component={OrderScreen} />\n\n\t\t\t\t<Route path='/admin/userlist' component={UserListScreen} />\n\t\t\t\t<Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n\t\t\t\t<Route path='/admin/productlist' component={ProductListScreen} />\n\n\t\t\t</Container>\n\n\t\t\t<Footer />\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n/* CSS Imports */\nimport './css/bootstrap.min.css';\nimport './css/site.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}